import { ParsedResume } from "@/types/resume";
import { createChatCompletion } from "./deepseek/client";

/**
 * –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä —Ä–µ–∑—é–º–µ —Å –ª—É—á—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 */
export async function parseResumeTextImproved(text: string): Promise<ParsedResume> {
  const maxRetries = 3;
  let lastError: Error | null = null;
  
  for (let attempt = 1; attempt <= maxRetries; attempt++) {
    try {
      console.log(`–ü–æ–ø—ã—Ç–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ ${attempt}/${maxRetries}`);
      
      const prompt = `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É —Ä–µ–∑—é–º–µ. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ –∏ –∏–∑–≤–ª–µ–∫–∏ –∏–∑ –Ω–µ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.

–í–ê–ñ–ù–û: 
- –ë—É–¥—å –æ—á–µ–Ω—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º –∫ –¥–µ—Ç–∞–ª—è–º
- –ò–∑–≤–ª–µ–∫–∞–π –í–°–ï –≤–æ–∑–º–æ–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –Ω–∞–ø–∏—Å–∞–Ω—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
- –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–π null
- –ï—Å–ª–∏ –∏–º—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π –Ω–∞–π—Ç–∏ –≤ email –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö
- –ï—Å–ª–∏ –¥–æ–ª–∂–Ω–æ—Å—Ç—å –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –ø–æ–ø—Ä–æ–±—É–π –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ –æ–ø—ã—Ç—É —Ä–∞–±–æ—Ç—ã
- –ë—É–¥—å –≥–∏–±–∫–∏–º –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–π JSON –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:
{
  "personal": {
    "fullName": "string (–ø–æ–ª–Ω–æ–µ –∏–º—è)",
    "email": "string | null (email –∞–¥—Ä–µ—Å)",
    "phone": "string | null (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞)",
    "location": "string | null (–≥–æ—Ä–æ–¥, —Å—Ç—Ä–∞–Ω–∞)",
    "birthDate": "string | null (–¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è)",
    "photo": "string | null (—Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ)"
  },
  "professional": {
    "title": "string (–∂–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∏–ª–∏ —Ç–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è)",
    "summary": "string (–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ–ø—ã—Ç–∞ 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)",
    "totalExperience": number (–æ–±—â–∏–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤ –≥–æ–¥–∞—Ö),
    "skills": {
      "hard": ["string"] (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏: —è–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏),
      "soft": ["string"] (–º—è–≥–∫–∏–µ –Ω–∞–≤—ã–∫–∏: –ª–∏–¥–µ—Ä—Å—Ç–≤–æ, –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ),
      "tools": ["string"] (–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: IDE, —Å–∏—Å—Ç–µ–º—ã, –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã)
    }
  },
  "experience": [
    {
      "company": "string (–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏)",
      "position": "string (–¥–æ–ª–∂–Ω–æ—Å—Ç—å)",
      "startDate": "string (YYYY-MM)",
      "endDate": "string | null (YYYY-MM –∏–ª–∏ null –µ—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Ä–∞–±–æ—Ç–∞)",
      "description": "string (–æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π)",
      "achievements": ["string"] (–∫–ª—é—á–µ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã)
    }
  ],
  "education": [
    {
      "institution": "string (—É—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ)",
      "degree": "string (—Å—Ç–µ–ø–µ–Ω—å)",
      "field": "string (—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å)",
      "startDate": "string (YYYY-MM)",
      "endDate": "string | null (YYYY-MM)",
      "gpa": "string | null (—Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª)",
      "description": "string | null (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)"
    }
  ],
  "languages": [
    {
      "name": "string (–Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞)",
      "level": "string (—É—Ä–æ–≤–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è: A1, A2, B1, B2, C1, C2, Native, Fluent, Intermediate, Basic)",
      "certification": "string | null (—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç)"
    }
  ],
  "additional": {
    "certifications": [
      {
        "name": "string (–Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞)",
        "issuer": "string (–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è)",
        "date": "string (YYYY-MM)",
        "expiry": "string | null (YYYY-MM)"
      }
    ],
    "publications": [
      {
        "title": "string (–Ω–∞–∑–≤–∞–Ω–∏–µ)",
        "type": "string (—Ç–∏–ø: —Å—Ç–∞—Ç—å—è, –∫–Ω–∏–≥–∞, –ø–∞—Ç–µ–Ω—Ç)",
        "date": "string (YYYY-MM)",
        "description": "string | null (–æ–ø–∏—Å–∞–Ω–∏–µ)"
      }
    ],
    "projects": [
      {
        "name": "string (–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞)",
        "description": "string (–æ–ø–∏—Å–∞–Ω–∏–µ)",
        "technologies": ["string"] (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏),
        "url": "string | null (—Å—Å—ã–ª–∫–∞)",
        "startDate": "string (YYYY-MM)",
        "endDate": "string | null (YYYY-MM)"
      }
    ],
    "awards": [
      {
        "name": "string (–Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥—ã)",
        "issuer": "string (–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è)",
        "date": "string (YYYY-MM)",
        "description": "string | null (–æ–ø–∏—Å–∞–Ω–∏–µ)"
      }
    ],
    "interests": ["string"] (–∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —Ö–æ–±–±–∏)
  }
}

–¢–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ:
${text}`;

      const response = await createChatCompletion([
        {
          role: "user",
          content: prompt
        }
      ]);

      if (!response || !response.choices || !response.choices[0] || !response.choices[0].message) {
        throw new Error("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç AI");
      }

      // –û—á–∏—Å—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç markdown
      let jsonText = response.choices[0].message.content?.trim() || '';
      if (jsonText.startsWith('```json')) {
        jsonText = jsonText.replace(/^```json\s*/, '').replace(/\s*```$/, '');
      } else if (jsonText.startsWith('```')) {
        jsonText = jsonText.replace(/^```\s*/, '').replace(/\s*```$/, '');
      }

      const parsedData = JSON.parse(jsonText) as ParsedResume;
      
      // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
      const hasPersonalInfo = parsedData.personal.fullName || parsedData.personal.email || parsedData.personal.phone;
      const hasProfessionalInfo = parsedData.professional.title || 
        (parsedData.professional.skills.hard && parsedData.professional.skills.hard.length > 0) || 
        (parsedData.experience && parsedData.experience.length > 0);
      const hasAnyData = hasPersonalInfo || hasProfessionalInfo || 
        (parsedData.education && parsedData.education.length > 0);

      if (!hasAnyData) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∑–Ω–∞—á–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑—é–º–µ');
      }

      console.log(`‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ —É—Å–ø–µ—à–µ–Ω –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ ${attempt}`);
      console.log(`üìä –ò–∑–≤–ª–µ—á–µ–Ω–æ: –∏–º—è=${parsedData.personal.fullName}, email=${parsedData.personal.email}, –Ω–∞–≤—ã–∫–∏=${parsedData.professional.skills.hard?.length || 0}`);
      
      return parsedData;
      
    } catch (error) {
      lastError = error instanceof Error ? error : new Error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      console.error(`‚ùå –ü–æ–ø—ã—Ç–∫–∞ ${attempt} –Ω–µ —É–¥–∞–ª–∞—Å—å:`, lastError.message);
      
      if (attempt < maxRetries) {
        const delay = attempt * 1000; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
        console.log(`‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ ${delay}ms –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π...`);
        await new Promise(resolve => setTimeout(resolve, delay));
      }
    }
  }
  
  throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ä–µ–∑—é–º–µ –ø–æ—Å–ª–µ ${maxRetries} –ø–æ–ø—ã—Ç–æ–∫. –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${lastError?.message}`);
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
 */
export function createSafeResumeData(parsedData: ParsedResume, fileInfo: {
  fileName: string;
  fileSize: number;
  mimeType: string;
  fileUrl: string | null;
}) {
  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–æ–≤
  const allSkills = [
    ...(parsedData.professional.skills.hard || []),
    ...(parsedData.professional.skills.soft || []),
    ...(parsedData.professional.skills.tools || [])
  ].filter(Boolean);

  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤
  const languages = (parsedData.languages || [])
    .map(lang => typeof lang === 'string' ? lang : (lang as any).name || (lang as any).language || '')
    .filter(Boolean);

  // –û—á–∏—Å—Ç–∫–∞ parsed_data –¥–ª—è JSONB
  const cleanParsedData = {
    ...parsedData,
    experience: parsedData.experience && parsedData.experience.length > 0 ? parsedData.experience : null,
    education: parsedData.education && parsedData.education.length > 0 ? parsedData.education : null,
    languages: parsedData.languages && parsedData.languages.length > 0 ? parsedData.languages : null,
    additional: {
      ...parsedData.additional,
      certifications: parsedData.additional.certifications && parsedData.additional.certifications.length > 0 ? parsedData.additional.certifications : null,
      publications: parsedData.additional.publications && parsedData.additional.publications.length > 0 ? parsedData.additional.publications : null,
      projects: parsedData.additional.projects && parsedData.additional.projects.length > 0 ? parsedData.additional.projects : null,
    },
    professional: {
      ...parsedData.professional,
      skills: {
        ...parsedData.professional.skills,
        soft: parsedData.professional.skills.soft && parsedData.professional.skills.soft.length > 0 ? parsedData.professional.skills.soft : null,
        tools: parsedData.professional.skills.tools && parsedData.professional.skills.tools.length > 0 ? parsedData.professional.skills.tools : null,
      }
    }
  };

  return {
    // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
    file_url: fileInfo.fileUrl,
    file_name: fileInfo.fileName,
    file_size: fileInfo.fileSize,
    mime_type: fileInfo.mimeType,
    
    // –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    full_name: parsedData.personal.fullName || null,
    email: parsedData.personal.email || null,
    phone: parsedData.personal.phone || null,
    location: parsedData.personal.location || null,
    
    // –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    parsed_data: cleanParsedData as any,
    skills: allSkills.length > 0 ? allSkills : null,
    experience_years: parsedData.professional.totalExperience || 0,
    last_position: parsedData.experience?.[0]?.position || null,
    last_company: parsedData.experience?.[0]?.company || null,
    education_level: parsedData.education?.[0]?.degree || null,
    languages: languages.length > 0 ? languages : null,
    
    // –í–µ–∫—Ç–æ—Ä–Ω—ã–µ –ø–æ–ª—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ)
    embedding: null, // –ü–æ–∫–∞ –æ—Ç–∫–ª—é—á–∞–µ–º –≤–µ–∫—Ç–æ—Ä—ã
    summary_embedding: null,
    
    // –°—Ç–∞—Ç—É—Å –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    status: "active",
    quality_score: calculateQualityScore(parsedData),
    upload_token: generateToken(),
    consent_given: true,
  };
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è resume_summaries
 */
export function createSafeSummaryData(parsedData: ParsedResume, resumeId: string) {
  const allSkills = [
    ...(parsedData.professional.skills.hard || []),
    ...(parsedData.professional.skills.soft || []),
    ...(parsedData.professional.skills.tools || [])
  ].filter(Boolean);

  const languages = (parsedData.languages || [])
    .map(lang => lang.name)
    .filter(Boolean);

  return {
    resume_id: resumeId,
    quick_id: `QR-${Date.now()}`,
    full_name: parsedData.personal.fullName || '',
    email: parsedData.personal.email || '',
    phone: parsedData.personal.phone || '',
    location: parsedData.personal.location || '',
    current_position: parsedData.professional.title || '',
    current_company: parsedData.experience?.[0]?.company || '',
    experience_years: parsedData.professional.totalExperience || 0,
    education_level: parsedData.education?.[0]?.degree || '',
    skills: allSkills.length > 0 ? allSkills : [],
    languages: languages.length > 0 ? languages : [],
    summary: parsedData.professional.summary || '',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  };
}

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ä–∞—Å—á–µ—Ç –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—é–º–µ
 */
function calculateQualityScore(parsedData: ParsedResume): number {
  let score = 0;
  
  // –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (20 –±–∞–ª–ª–æ–≤)
  if (parsedData.personal.fullName) score += 5;
  if (parsedData.personal.email) score += 5;
  if (parsedData.personal.phone) score += 5;
  if (parsedData.personal.location) score += 5;
  
  // –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (40 –±–∞–ª–ª–æ–≤)
  if (parsedData.professional.title) score += 10;
  if (parsedData.professional.summary) score += 10;
  if (parsedData.professional.totalExperience > 0) score += 10;
  if (parsedData.professional.skills.hard && parsedData.professional.skills.hard.length > 0) score += 10;
  
  // –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã (30 –±–∞–ª–ª–æ–≤)
  if (parsedData.experience && parsedData.experience.length > 0) {
    score += Math.min(30, parsedData.experience.length * 10);
  }
  
  // –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (10 –±–∞–ª–ª–æ–≤)
  if (parsedData.education && parsedData.education.length > 0) score += 10;
  
  return Math.min(100, score);
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞
 */
function generateToken(): string {
  return Math.random().toString(36).substring(2) + Date.now().toString(36);
}
