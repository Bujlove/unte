import { NextRequest, NextResponse } from "next/server";
import { parseResumeTextWithRetry, calculateQualityScore, extractSkills, createResumeSummary } from "@/lib/deepseek/parser";
import { extractTextFromFile } from "@/lib/storage/file-parser";

export async function GET(request: NextRequest) {
  try {
    console.log('üß™ Testing resume parsing...');
    
    // Read test resume
    const testResumeText = `–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤
Frontend Developer
ivan.petrov@email.com
+7 (999) 123-45-67
–ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è

–û–ü–´–¢ –†–ê–ë–û–¢–´:
2020-2023 - Senior Frontend Developer –≤ –û–û–û "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"
- –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
- –†–∞–±–æ—Ç–∞ —Å TypeScript –∏ Redux
- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π –∏–∑ 3 —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

2018-2020 - Frontend Developer –≤ –ò–ü "–í–µ–±-—Å—Ç—É–¥–∏—è"
- –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö —Å–∞–π—Ç–æ–≤
- –†–∞–±–æ—Ç–∞ —Å HTML, CSS, JavaScript

–û–ë–†–ê–ó–û–í–ê–ù–ò–ï:
2014-2018 - –ú–ì–£, –§–∞–∫—É–ª—å—Ç–µ—Ç –í–ú–ö, –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å "–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"

–ù–ê–í–´–ö–ò:
- React, TypeScript, JavaScript
- HTML, CSS, SCSS
- Node.js, Express
- Git, Webpack
- –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ (B2)`;

    console.log('üìÑ Test resume content loaded');
    
    // Test text extraction
    console.log('üîç Testing text extraction...');
    const buffer = Buffer.from(testResumeText, 'utf8');
    const extractedText = await extractTextFromFile(buffer, 'text/plain', 'test_resume.txt');
    console.log('‚úÖ Text extraction successful, length:', extractedText.length);
    
    // Test parsing
    console.log('ü§ñ Testing AI parsing...');
    const parsedData = await parseResumeTextWithRetry(extractedText);
    console.log('‚úÖ Parsing successful');
    
    // Test quality score
    const qualityScore = calculateQualityScore(parsedData);
    console.log('üìä Quality score:', qualityScore);
    
    // Test skills extraction
    const skills = extractSkills(parsedData);
    console.log('üõ†Ô∏è Skills:', skills);
    
    // Test summary creation
    const summary = createResumeSummary(parsedData);
    console.log('üìù Summary created');
    
    return NextResponse.json({
      success: true,
      message: 'All parsing tests passed!',
      data: {
        qualityScore,
        skills,
        summary: {
          fullName: summary.full_name,
          position: summary.current_position,
          company: summary.current_company,
          experience: summary.experience_years,
          skills: summary.skills?.slice(0, 5) || [],
          location: summary.location
        },
        parsedData: {
          personal: parsedData.personal,
          professional: parsedData.professional
        }
      }
    });
    
  } catch (error) {
    console.error('‚ùå Test failed:', error);
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
      stack: error instanceof Error ? error.stack : undefined
    }, { status: 500 });
  }
}
