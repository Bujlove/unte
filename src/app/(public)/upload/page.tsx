"use client";

import { useState, useCallback } from "react";
import { useDropzone } from "react-dropzone";
import Link from "next/link";

export default function UploadPage() {
  const [uploading, setUploading] = useState(false);
  const [progress, setProgress] = useState(0);
  const [consent, setConsent] = useState(false);
  const [result, setResult] = useState<{
    success: boolean;
    message: string;
    uploadToken?: string;
  } | null>(null);

  const onDrop = useCallback(
    async (acceptedFiles: File[]) => {
      if (!consent) {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–∞–π—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö");
        return;
      }

      const file = acceptedFiles[0];
      if (!file) return;

      setUploading(true);
      setProgress(10);
      setResult(null);

      try {
        const formData = new FormData();
        formData.append("file", file);
        formData.append("consent", "true");

        setProgress(30);

        const response = await fetch("/api/resumes/upload", {
          method: "POST",
          body: formData,
        });

        setProgress(80);

        const data = await response.json();

        setProgress(100);

        if (data.success) {
          setResult({
            success: true,
            message: data.message,
            uploadToken: data.uploadToken,
          });
        } else {
          setResult({
            success: false,
            message: data.error || "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ",
          });
        }
      } catch (error) {
        setResult({
          success: false,
          message: "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
        });
      } finally {
        setUploading(false);
        setTimeout(() => setProgress(0), 1000);
      }
    },
    [consent]
  );

  const { getRootProps, getInputProps, isDragActive } = useDropzone({
    onDrop,
    accept: {
      "application/pdf": [".pdf"],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document": [".docx"],
      "application/msword": [".doc"],
      "text/plain": [".txt"],
    },
    maxSize: 10 * 1024 * 1024, // 10MB
    multiple: false,
    disabled: uploading,
  });

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary-50 to-white py-12 px-4">
      <div className="max-w-3xl mx-auto">
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–µ —Ä–µ–∑—é–º–µ</h1>
          <p className="text-lg text-gray-600">
            –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º AI –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–∞—à–µ–≥–æ —Ä–µ–∑—é–º–µ –∏ –ø–æ–º–æ–≥–∞–µ–º —Ä–µ–∫—Ä—É—Ç–µ—Ä–∞–º –Ω–∞–π—Ç–∏ –≤–∞—Å
          </p>
        </div>

        <div className="bg-white rounded-2xl shadow-xl p-8 mb-6">
          <div
            {...getRootProps()}
            className={`border-2 border-dashed rounded-xl p-12 text-center cursor-pointer transition-all ${
              isDragActive
                ? "border-primary bg-primary-50"
                : "border-gray-300 hover:border-primary hover:bg-gray-50"
            } ${uploading ? "opacity-50 cursor-not-allowed" : ""}`}
          >
            <input {...getInputProps()} />
            <div className="space-y-4">
              <div className="text-6xl">üìÑ</div>
              {isDragActive ? (
                <p className="text-xl text-primary font-semibold">–û—Ç–ø—É—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª –∑–¥–µ—Å—å...</p>
              ) : (
                <>
                  <p className="text-xl font-semibold text-gray-700">
                    –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ä–µ–∑—é–º–µ —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞
                  </p>
                  <p className="text-sm text-gray-500">
                    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PDF, DOCX, DOC, TXT (–º–∞–∫—Å. 10MB)
                  </p>
                </>
              )}
            </div>
          </div>

          {uploading && (
            <div className="mt-6">
              <div className="flex justify-between text-sm text-gray-600 mb-2">
                <span>–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—é–º–µ...</span>
                <span>{progress}%</span>
              </div>
              <div className="w-full bg-gray-200 rounded-full h-2 overflow-hidden">
                <div
                  className="bg-primary h-full transition-all duration-300"
                  style={{ width: `${progress}%` }}
                />
              </div>
              <p className="text-xs text-gray-500 mt-2 text-center">
                –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à –æ–ø—ã—Ç –∏ –Ω–∞–≤—ã–∫–∏ —Å –ø–æ–º–æ—â—å—é AI
              </p>
            </div>
          )}

          {result && (
            <div
              className={`mt-6 p-4 rounded-lg ${
                result.success
                  ? "bg-green-50 border border-green-200"
                  : "bg-red-50 border border-red-200"
              }`}
            >
              <p
                className={`font-semibold mb-2 ${
                  result.success ? "text-green-800" : "text-red-800"
                }`}
              >
                {result.success ? "‚úì –£—Å–ø–µ—à–Ω–æ!" : "‚úó –û—à–∏–±–∫–∞"}
              </p>
              <p className={result.success ? "text-green-700" : "text-red-700"}>
                {result.message}
              </p>
              {result.uploadToken && (
                <div className="mt-4 p-3 bg-white rounded border border-green-300">
                  <p className="text-sm text-gray-700 mb-2">
                    –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∑—é–º–µ –≤ –±—É–¥—É—â–µ–º:
                  </p>
                  <p className="text-xs text-gray-600 break-all font-mono">
                    {window.location.origin}/upload?token={result.uploadToken}
                  </p>
                </div>
              )}
            </div>
          )}

          <div className="mt-6">
            <label className="flex items-start space-x-3 cursor-pointer">
              <input
                type="checkbox"
                checked={consent}
                onChange={(e) => setConsent(e.target.checked)}
                className="mt-1 h-5 w-5 text-primary border-gray-300 rounded focus:ring-primary"
              />
              <span className="text-sm text-gray-700">
                –Ø –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –º–æ–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –†–µ–∑—é–º–µ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è 180
                –¥–Ω–µ–π –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å—Ä–æ–∫–∞. –í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ä–µ–∑—é–º–µ –≤ –ª—é–±–æ–π
                –º–æ–º–µ–Ω—Ç, —Å–≤—è–∑–∞–≤—à–∏—Å—å —Å –Ω–∞–º–∏.
              </span>
            </label>
          </div>
        </div>

        <div className="bg-blue-50 border border-blue-200 rounded-xl p-6 mb-6">
          <h2 className="text-lg font-semibold text-blue-900 mb-3">
            –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –≤–∞—à–∏–º —Ä–µ–∑—é–º–µ?
          </h2>
          <ul className="space-y-2 text-blue-800">
            <li className="flex items-start">
              <span className="mr-2">üîí</span>
              <span>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã –∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π</span>
            </li>
            <li className="flex items-start">
              <span className="mr-2">ü§ñ</span>
              <span>AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –æ–ø—ã—Ç, –Ω–∞–≤—ã–∫–∏ –∏ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é</span>
            </li>
            <li className="flex items-start">
              <span className="mr-2">üéØ</span>
              <span>–†–µ–∫—Ä—É—Ç–µ—Ä—ã –Ω–∞—Ö–æ–¥—è—Ç –≤–∞—Å –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º –∑–∞–ø—Ä–æ—Å–∞–º</span>
            </li>
            <li className="flex items-start">
              <span className="mr-2">‚è∞</span>
              <span>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 180 –¥–Ω–µ–π (GDPR compliance)</span>
            </li>
          </ul>
        </div>

        <div className="text-center">
          <Link href="/" className="text-gray-600 hover:text-primary transition">
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>
      </div>
    </div>
  );
}

